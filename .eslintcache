[{"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/index.js":"1","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/App.js":"2","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/reportWebVitals.js":"3","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/components/Nav.jsx":"4","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/Home.jsx":"5","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/About.jsx":"6","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/Search.jsx":"7","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/Track.jsx":"8","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/services/index.js":"9","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/components/SearchDropdown.jsx":"10","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/components/SystemCard.jsx":"11","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/SystemDetails.jsx":"12"},{"size":589,"mtime":1607099746356,"results":"13","hashOfConfig":"14"},{"size":790,"mtime":1607289413479,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607098808896,"results":"16","hashOfConfig":"14"},{"size":566,"mtime":1607110800228,"results":"17","hashOfConfig":"14"},{"size":368,"mtime":1607232500134,"results":"18","hashOfConfig":"14"},{"size":127,"mtime":1607102003678,"results":"19","hashOfConfig":"14"},{"size":3579,"mtime":1607292679711,"results":"20","hashOfConfig":"14"},{"size":111,"mtime":1607102431243,"results":"21","hashOfConfig":"14"},{"size":206,"mtime":1607118777290,"results":"22","hashOfConfig":"14"},{"size":488,"mtime":1607288377868,"results":"23","hashOfConfig":"14"},{"size":422,"mtime":1607292118775,"results":"24","hashOfConfig":"14"},{"size":2971,"mtime":1607307827074,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"5iwn18",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/index.js",[],["52","53"],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/App.js",[],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/reportWebVitals.js",[],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/components/Nav.jsx",[],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/Home.jsx",[],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/About.jsx",[],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/Search.jsx",["54","55","56"],"import axios from \"axios\";\nimport searchimg from \"../images/search.jpg\";\nimport { baseURL, config } from \"../services\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchDropdown from \"../components/SearchDropdown\";\nimport SystemCard from \"../components/SystemCard\";\nimport \"./Search.css\";\n\nfunction Search() {\n  const [systems, setSystems] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [searchedCountry, setSearchedCountry] = useState(\"\");\n  const [searchedCity, setSearchedCity] = useState(\"\");\n  const [searchedSystems, setSearchedSystems] = useState([]);\n\n  async function getSystems() {\n    let pageOneURL = `${baseURL}/Metro_Systems`;\n    try {\n      let response = await axios.get(pageOneURL, config);\n      let offset = response.data.offset;\n      let pageTwoURL = `${baseURL}/Metro_Systems?offset=${offset}`;\n      let pageTwoResponse = await axios.get(pageTwoURL, config);\n      let pageOne = response.data.records;\n      let pageTwo = pageTwoResponse.data.records;\n      let concattedRecords = [...pageOne, ...pageTwo];\n      console.log(concattedRecords);\n      setSystems(concattedRecords);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function removeThenAlpha(arr) {\n    //takes an array, remove dupes, then alphabatizes\n    let newArray = arr\n      .filter((item, index) => arr.indexOf(item) === index)\n      .sort();\n    return newArray;\n  }\n\n  function getCountries() {\n    let countriesArray = removeThenAlpha(\n      systems.map((item) => item.fields.Country)\n    );\n    setCountries(countriesArray);\n  }\n\n  function getCities() {\n    let citiesInCountry = systems.filter(\n      (item) => item.fields.Country === searchedCountry\n    );\n    let citiesArray = removeThenAlpha(\n      citiesInCountry.map((item) => item.fields.City)\n    );\n    setCities(citiesArray);\n  }\n\n  function findCitySystems() {\n    let systemsInCity = systems.filter(\n      (item) => item.fields.City === searchedCity\n    );\n    setSearchedSystems(systemsInCity);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSearchedCity(e.target[0].value);\n  }\n\n  // All of the UseEffects...\n  useEffect(() => {\n    getSystems();\n  }, []);\n\n  useEffect(() => {\n    getCountries();\n  }, [systems]);\n\n  useEffect(() => {\n    getCities();\n  }, [searchedCountry]);\n\n  useEffect(() => {\n    findCitySystems();\n  }, [searchedCity]);\n\n  return (\n    <div>\n      <div\n        className=\"header-img\"\n        style={{ backgroundImage: `url(${searchimg})` }}\n      >\n        <h1>Search Metro Systems</h1>\n      </div>\n\n      <div className=\"search\">\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Search Systems\"\n            value={searchedCity}\n            onChange={(e) => setSearchedCity(e.target.value)}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n        <SearchDropdown\n          name=\"countries\"\n          setSearched={setSearchedCountry}\n          searched={searchedCountry}\n          array={countries}\n        />\n        <SearchDropdown\n          name=\"cities\"\n          setSearched={setSearchedCity}\n          searched={searchedCity}\n          array={cities}\n        />\n      </div>\n\n      <div className=\"systems\">\n        {searchedSystems.map((system, index) => (\n          <Link key={`${index}`} to={`/details/${system.id}`}>\n            <SystemCard system={system} />\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/Track.jsx",[],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/services/index.js",[],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/components/SearchDropdown.jsx",[],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/components/SystemCard.jsx",[],"/Users/evynnewton/Documents/general_assembly/sei/unit_2/projects/every-metro/src/pages/SystemDetails.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":79,"column":6,"nodeType":"63","endLine":79,"endColumn":15,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":83,"column":6,"nodeType":"63","endLine":83,"endColumn":23,"suggestions":"66"},{"ruleId":"61","severity":1,"message":"67","line":87,"column":6,"nodeType":"63","endLine":87,"endColumn":20,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCountries'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'getCities'. Either include it or remove the dependency array.",["72"],"React Hook useEffect has a missing dependency: 'findCitySystems'. Either include it or remove the dependency array.",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [getCountries, systems]",{"range":"80","text":"81"},"Update the dependencies array to be: [getCities, searchedCountry]",{"range":"82","text":"83"},"Update the dependencies array to be: [findCitySystems, searchedCity]",{"range":"84","text":"85"},[2318,2327],"[getCountries, systems]",[2373,2390],"[getCities, searchedCountry]",[2442,2456],"[findCitySystems, searchedCity]"]